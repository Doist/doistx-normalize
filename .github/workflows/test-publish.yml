name: Test and publish

on:
  push:
    branches: [ main ]
    tags: [ v* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            targets: native,common
          - os: macos-latest
            targets: native
          - os: windows-latest
            targets: native
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - run: |
          # azure.archive.ubuntu.com is flaky
          sudo sed -i 's/azure.archive.ubuntu.com/archive.ubuntu.com/' /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y libunistring-dev libc6-dev-i386
        if: runner.os == 'Linux'
      - run: |
          # Avoid "No usable sandbox" errors on Ubuntu, based on the instructions found here:
          # https://chromium.googlesource.com/chromium/src/+/main/docs/security/apparmor-userns-restrictions.md
          echo 0 | sudo tee /proc/sys/kernel/apparmor_restrict_unprivileged_userns
        if: runner.os == 'Linux'
      - run: ./gradlew assemble check
        env:
          ORG_GRADLE_PROJECT_targets: ${{ matrix.targets }}
        shell: bash

  publish:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            targets: all
            publishRootTarget: true
          - os: macos-latest
            targets: native
            publishRootTarget: false
          - os: windows-latest
            targets: native
            publishRootTarget: false
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - id: get_tag_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        shell: bash
      - run: sudo apt-get install -y libunistring-dev libc6-dev-i386
        if: runner.os == 'Linux'
      - run: ./gradlew assemble publishToSonatype closeAndReleaseSonatypeStagingRepository
        env:
          ORG_GRADLE_PROJECT_version: ${{ steps.get_tag_version.outputs.VERSION }}
          ORG_GRADLE_PROJECT_targets: ${{ matrix.targets }}
          ORG_GRADLE_PROJECT_publishRootTarget: ${{ matrix.publishRootTarget }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
        shell: bash

  release:
    needs: publish
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
