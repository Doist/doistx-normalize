name: Test and publish

on:
  push:
    branches: [ main ]
    tags: [ v* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            targets: native,common
          - os: macos-latest
            targets: native
          - os: windows-latest
            targets: native
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - run: sudo apt-get install -y libunistring-dev libc6-dev-i386
        if: runner.os == 'Linux'
      - run: ./gradlew assemble check
        env:
          ORG_GRADLE_PROJECT_targets: ${{ matrix.targets }}
        shell: bash

  publish:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            targets: native,common
            publishRootTarget: true
          - os: macos-latest
            targets: native
            publishRootTarget: false
          - os: windows-latest
            targets: native
            publishRootTarget: false
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - id: get_tag_version
        run: echo "::set-output name=VERSION::${GITHUB_REF#refs/tags/v}"
        shell: bash
      - run: sudo apt-get install -y libunistring-dev libc6-dev-i386
        if: runner.os == 'Linux'
      - run: ./gradlew assemble
        shell: bash
      - run: ./gradlew -i publishToSonatype closeAndReleaseSonatypeStagingRepository
        env:
          ORG_GRADLE_PROJECT_version: ${{ steps.get_tag_version.outputs.VERSION }}
          ORG_GRADLE_PROJECT_targets: ${{ matrix.targets }}
          ORG_GRADLE_PROJECT_publishRootTarget: ${{ matrix.publishRootTarget }}
          ORG_GRADLE_PROJECT_ossrh.username: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_ossrh.password: ${{ secrets.OSSRH_PASSWORD }}
          ORG_GRADLE_PROJECT_signing.key: ${{ secrets.SIGNING_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signing.password: ${{ secrets.SIGNING_PASSWORD }}
        shell: bash

  release:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
