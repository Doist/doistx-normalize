name: Test and publish

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    tags: [ v* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - run: sudo apt-get install libunistring-dev
        if: runner.os == 'Linux'
      - run: ./gradlew ciTests
        shell: bash

  publish:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - id: get_tag_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}
        shell: bash
      - run: sudo apt-get install libunistring-dev
        if: runner.os == 'Linux'
      - run: ./gradlew ciCompile
        shell: bash
      - run: ./gradlew publishAllPublicationsToSonatypeRepository -PpublishCommonTargets=$PUBLISH_COMMON_TARGETS --max-workers 1 closeAndReleaseSonatypeStagingRepository
        env:
          PUBLISH_VERSION: ${{ steps.get_tag_version.outputs.VERSION }}
          PUBLISH_COMMON_TARGETS: ${{ runner.os == 'Linux' }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_SECRET_KEY: ${{ secrets.SIGNING_SECRET_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        shell: bash
      - uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
        if: runner.os == 'Linux'
